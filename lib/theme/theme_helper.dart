import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: colorScheme.onErrorContainer.withOpacity(1),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.gray10001,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(4.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.gray50,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray300,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: colorScheme.primaryContainer,
          fontSize: 18.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray90002,
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 12.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: appTheme.gray90002,
          fontSize: 32.fSize,
          fontFamily: 'Epilogue',
          fontWeight: FontWeight.w400,
        ),
        headlineSmall: TextStyle(
          color: appTheme.gray90002,
          fontSize: 24.fSize,
          fontFamily: 'Epilogue',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray90002,
          fontSize: 12.fSize,
          fontFamily: 'Epilogue',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: appTheme.gray90002,
          fontSize: 20.fSize,
          fontFamily: 'Epilogue',
          fontWeight: FontWeight.w400,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray90002,
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF379AE6),
    primaryContainer: Color(0XFF2E2400),

    // Error colors
    errorContainer: Color(0XFF424955),
    onError: Color(0XFF6E7787),
    onErrorContainer: Color(0X4CFFFFFF),

    // On colors(text colors)
    onPrimary: Color(0X1E120F28),
    onPrimaryContainer: Color(0X30FDCB12),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amberA700 => Color(0XFFD4A602);

  // Black
  Color get black90000 => Color(0X00000000);

  // BlueGray
  Color get blueGray200 => Color(0XFFBCC1CA);
  Color get blueGray900 => Color(0XFF323842);

  // DeepPurple
  Color get deepPurpleA400 => Color(0XFF8023EB);

  // Gray
  Color get gray100 => Color(0XFFF7F1FE);
  Color get gray10001 => Color(0XFFF3F4F6);
  Color get gray10002 => Color(0XFFEEFDF3);
  Color get gray300 => Color(0XFFDEE1E6);
  Color get gray50 => Color(0XFFF8F9FA);
  Color get gray500 => Color(0XFF9095A0);
  Color get gray5001 => Color(0XFFFAFAFB);
  Color get gray700 => Color(0XFF565E6C);
  Color get gray900 => Color(0XFF413301);
  Color get gray90001 => Color(0XFF1D2128);
  Color get gray90002 => Color(0XFF171A1F);

  // Green
  Color get green800 => Color(0XFF117B34);
  Color get greenA700 => Color(0XFF1DD75B);

  // LightGreen
  Color get lightGreen900 => Color(0XFF5D4108);

  // Lime
  Color get lime900 => Color(0XFF98690C);

  // Orange
  Color get orange50 => Color(0XFFFEF7D9);
  Color get orange5001 => Color(0XFFFEF9E1);

  // Purple
  Color get purple200 => Color(0XFFCAA4F7);

  // Red
  Color get red50 => Color(0XFFFDF2F2);
  Color get red600 => Color(0XFFDE3B40);

  // Yellow
  Color get yellow300 => Color(0XFFFFF36B);
  Color get yellow30001 => Color(0XFFFFF46B);
  Color get yellow50 => Color(0XFFFFF9E6);
  Color get yellow800 => Color(0XFFEFB034);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
